Importação de módulos
import random - biblioteca que gera valores aleatórios

import string - biblioteca - contém conjuntos de caracteres úteis - letras, números e símbolos

def gerar_senha(tamanho=12, incluir_numeros=True, incluir_maiusculas=True, incluir_simbolos=True):

define a função gerar_senha - gera uma senha aleatória

possui 4 parâmetros
tamanho=12 - define o tamanho padrão como 12
incluir_numeros - indica se números serão incluídos
incluir_maiusculas - indica se letras maiúsculas serão incluídas
incluir_simbolos - indica se símbolos especiais serão incluídos

caracteres = string.ascii_lowercase  # Começa com letras minúsculas

a variável caracteres inicialmente contém apenas letras minúsculas

if incluir_maiusculas:
    caracteres += string.ascii_uppercase

se incluir_maiusculas for True - adiciona maiúsculas
and so on...

senha = ''.join(random.choice(caracteres) for _ in range(tamanho))

cria uma senha com tamanho caracteres (12)

random.choice(caracteres) 
escolhe aleatoriamente um caractere da string caracteres

a compreensão de lista for _ in range(tamanho) executa esse processo tamanho vezes

''.join(...) une os caracteres gerados em uma única string

return senha - a função retorna a senha gerada

def main():

define a função principal main, que será executada quando o script for rodado

incluir_numeros = input("Incluir números? (s/n): ").strip().lower() == 's'
-pergunta ao usuário se deseja incluir números
-strip() remove espaços extras antes e depois da resposta
-lower() coverte a resposta para minúsculas
== 's' retorna True se digitar "s" e False caso contrário

senhas = [gerar_senha(tamanho, incluir_numeros, incluir_maiusculas, incluir_simbolos) for _ in range(quantidade)]

-cria uma lista de senhas usando uma compreensão de lista
-chama a função gerar_senha passando os parâmetros definidos pelo usuário
- o número de senhas geradas é determinado por quantidade


if __name__ == "__main__":
    main()

if __name__ == "__main__": 
-verifica se o script está sendo executado diretamente
- e não importado como módulo em outro código
- se for executado diretamente, chama a função main()

import os
-o módulo os fornece funções para interarir com o sistema operacional
-usado para determinaro o diretório atual e criar o caminho do arquivo onde as senhas serão salvas

def salvar_senhas(senhas)
-recebe uma lista de senhas e as salva em um arquivo de texto

diretorio_atual = os.path.dirname(os.path.abspath(__file__))

os.path.abspath(__file__)
-obtém o caminho absoluto do próprio script

os.path.dirname(...)
-extrai apenas o diretório do script
-garante que o arquivo será salvo no mesmo diretório onde o script está sendo executado

caminho_arquivo = os.path.join(diretorio_atual, "senhas.txt")

os.path.join(...)
-cria um caminho compatível com o sistema operacional

with open(caminho_arquivo, "w") as arquivo:
-abre o arquivo senhas.txt no modo escrita("w")
-se o arquivo já existir, será sobrescrito

for senha in senhas:
    arquivo.write(senha + "\n")

-itera sobre a lista senhas
-escreve cada senha em uma nova linha do arquivo

